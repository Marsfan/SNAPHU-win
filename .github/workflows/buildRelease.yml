# This is a basic workflow to help you get started with Actions

name: CI


# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ msys_test ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install MSYS2
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: 'gcc make'

      - name: Setup  Python
        uses: actions/setup-python@v2

      - name: Install python requirements
        run: |
          python -m pip install pip
          python -m pip install requests packaging

      # Get the source and unzip it to a new directory.
      - name: Get source
        id: getsrc
        run: |
          python .github/workflows/getSRC.py
          mkdir snap
          tar xzvf snaphu.tar.gz
          mv snaphu-v* snaphu

      - name: Build SNAPHU
        if: ${{ steps.getsrc.outputs.newVersion == True }}
        shell: msys2 {0}
        run: |
          cd ./snaphu/src
          make

      - name: Copy msys2.dll to binary directory
        if: ${{ steps.getsrc.outputs.newVersion == True }}
        shell: msys2 {0}
        run: cp /usr/bin/msys-2.0.dll ./snaphu/src

      - name: Zip SNAPHU with compiled exe
        if: ${{ steps.getsrc.outputs.newVersion == True }}
        run: |
          Compress-Archive snaphu ${{ steps.getsrc.outputs.zipName }}

      - name: Create Release
        if: ${{ steps.getsrc.outputs.newVersion == True }}
        uses: actions/create-release@v1
        id: create_release
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
            tag_name: ${{ steps.getsrc.outputs.version }}
            release_name: SNAPHU ${{ steps.getsrc.outputs.version }}
            body: ${{ steps.getsrc.outputs.notes }}
            draft: true
            prerelease: false

      - name: Upload program to releases
        if: ${{ steps.getsrc.outputs.newVersion == True }}
        uses: actions/upload-release-asset@v1.0.2
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./
            asset_name: ${{ steps.getsrc.outputs.zipName }}
            asset_content_type: application/zip
